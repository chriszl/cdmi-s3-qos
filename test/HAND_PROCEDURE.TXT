I. Install CDMI server

rm -rf /tmp/cdmi && \
git clone https://github.com/indigo-dc/cdmi-spi.git && \
cd cdmi-spi && \
git checkout b4817ed && \
mvn install && \
cd .. && \
git clone https://github.com/indigo-dc/cdmi-s3-qos.git && \
cd cdmi-s3-qos && \
mvn install && \
cd .. && \
git clone https://github.com/indigo-dc/CDMI.git && \
cp -rf cdmi-s3-qos/config CDMI/ && \
cd CDMI && \
git checkout 0ba64ce && \
sed -i 's/dummy_filesystem/radosgw/g' config/application.yml && \
sed -i 's/<dependencies>/<dependencies>\r\n<dependency>\r\n<groupId>pl.psnc<\/groupId>\r\n<artifactId>cdmi-s3-qos<\/artifactId>\r\n<version>0.0.1-SNAPSHOT<\/version>\r\n<\/dependency>/g' pom.xml && \
echo "java -Djava.security.egd=file:/dev/./urandom -jar target/cdmi-server-0.1-SNAPSHOT.jar  --server.port=80" > run.sh && \
chmod +x run.sh && \
mvn package -Dmaven.test.skip=true


II. Configure cdmi-s3-qos fixed-mode

> cd config
> vi objectstore.properties

Put to objectstore.properties file the bellow content and replace placeholders with proper values:

# THIS FILE MUST BE IGNORED BY GIT (or any other SCM)
objectstore.backend-gateway=org.indigo.cdmi.backend.radosgw.LifeModeBackendGateway
objectstore.ssh-gateway.host=<ip_add>
objectstore.ssh-gateway.port=<port>
objectstore.ssh-gateway.user=<user>
objectstore.ssh-gateway.password=<password>

III. Create container which refer to S3 buckets

1. run server: 
> screen
> java -Djava.security.egd=file:/dev/./urandom -jar target/cdmi-server-0.1-SNAPSHOT.jar  --server.port=80
> ctrl+a, d

2. create containers:
curl -X PUT http://localhost:80/default -H "Authorization: Basic cmVzdGFkbWluOnJlc3RhZG1pbg==" -H "Content-Type: application/cdmi-container" -d '{}' && \
curl -X PUT http://localhost:80/standard -H "Authorization: Basic cmVzdGFkbWluOnJlc3RhZG1pbg==" -H "Content-Type: application/cdmi-container" -d '{}' && \
curl -X PUT http://localhost:80/silver -H "Authorization: Basic cmVzdGFkbWluOnJlc3RhZG1pbg==" -H "Content-Type: application/cdmi-container" -d '{}' && \
curl -X PUT http://localhost:80/golden -H "Authorization: Basic cmVzdGFkbWluOnJlc3RhZG1pbg==" -H "Content-Type: application/cdmi-container" -d '{}' && \

3. read all qos profiles

curl -X GET http://localhost:80/cdmi_capabilities/container -H "Authorization: Basic cmVzdGFkbWluOnJlc3RhZG1pbg==" -H "Content-Type: application/cdmi-capability"
curl -X GET http://localhost:80/cdmi_capabilities/container/default -H "Authorization: Basic cmVzdGFkbWluOnJlc3RhZG1pbg==" -H "Content-Type: application/cdmi-capability"
curl -X GET http://localhost:80/cdmi_capabilities/container/standard -H "Authorization: Basic cmVzdGFkbWluOnJlc3RhZG1pbg==" -H "Content-Type: application/cdmi-capability"
curl -X GET http://localhost:80/cdmi_capabilities/container/silver -H "Authorization: Basic cmVzdGFkbWluOnJlc3RhZG1pbg==" -H "Content-Type: application/cdmi-capability"
curl -X GET http://localhost:80/cdmi_capabilities/container/golden -H "Authorization: Basic cmVzdGFkbWluOnJlc3RhZG1pbg==" -H "Content-Type: application/cdmi-capability"


4. read containers' qos profiles

curl -X GET http://localhost:8080/default -H "Authorization: Basic cmVzdGFkbWluOnJlc3RhZG1pbg==" -H "Content-Type: application/cdmi-object"
curl -X GET http://localhost:8080/standard -H "Authorization: Basic cmVzdGFkbWluOnJlc3RhZG1pbg==" -H "Content-Type: application/cdmi-object"
curl -X GET http://localhost:8080/silver -H "Authorization: Basic cmVzdGFkbWluOnJlc3RhZG1pbg==" -H "Content-Type: application/cdmi-object"
curl -X GET http://localhost:8080/golden -H "Authorization: Basic cmVzdGFkbWluOnJlc3RhZG1pbg==" -H "Content-Type: application/cdmi-object"

